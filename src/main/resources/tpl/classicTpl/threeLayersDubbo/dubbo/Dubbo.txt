package ${packName};

import org.apache.dubbo.config.annotation.DubboService;
import com.yupaopao.platform.common.dto.Response;
import com.yupaopao.platform.common.dto.PageResult,

import javax.annotation.Resource;
import javax.validation.Valid;

/**
 * @Author: zjh
 */
@DubboService
public class ${name} implements ${interName} {
    <#assign service_instance=service.name?uncap_first>
    @Resource
    private ${service.name} ${service_instance};

<#if type == 'id'>
    @Override
    public Response<${service.dto.name}> ${funcName}(@NotNull Long id) {
        Response<${service.dto.name}> res = new Response<>();
        ${service.dto.name} data = ${service_instance}.${service.funcName}(id);
        return res.success(data);
    }

</#if>
<#if type == 'query'>
    @Override
    public Response<PageResult<${service.dto.name}>> ${funcName}(@Valid ${service.req.name} req) {
        PageResult<${service.dto.name}> data = ${service_instance}.${service.funcName}(req);
        return Response.success(data);
    }

</#if>
<#if type == 'add'>
    @Override
    public Response<Void> ${funcName}(@Valid ${service.req.name} req) {
        ${service_instance}.${service.funcName}(req);
        return Response.success(null);
    }

</#if>
<#if type == 'update' || type == 'upsert'>
    @Override
    public Response<Void> ${funcName}(@Valid ${service.req.name} req) {
        ${service_instance}.${service.funcName}(req);
        return Response.success(null);
    }

</#if>
<#if type == 'delete'>
    @Override
    public Response<Void> ${funcName}(@Valid ${service.req.name} req) {
        ${service_instance}.${service.funcName}(req);
        return Response.success(null);
    }

</#if>
}
